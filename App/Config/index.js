export const Config = {
  // API_URL: 'https://pp-sfa.azurewebsites.net/',
  API_URL: "http://20.204.7.66:8080/",

  USER_SERVICE: {
    FETCH_AREAS_URL: "area/getAll",
    START_DAY_URL: "attendance/mark",
    END_DAY_URL: "attendance/endDay",
    LOGIN_URL: "login/login",
    LOG_OUT: "login/logout",
    MARK_ABSENT_URL: "agents/markAbsent",
    FETCH_AGENT_DETAILS: "agents/detail",
    CHECK_ATTENDANCE: "attendance/getattendance",
    FETCH_ALL_PSM: "login/getSubordinate",
    GET_APP_VERSION: "product/getProduct",
    GET_PROFILE: "profile/getprofile",
    LOGIN_SESSION: "login/loginSession",
    LOGOUT_SESSION: "login/logoutSession",
    RESET_PASSWORD: "login/resetPassword",
    GET_OTP: "login/generateOTPforgotPassword",
    RESET_OTP: "login/verifyOTPresetPassword",
    UPLOAD_PROFILE: "profile/uploadprofilePic",
    RESET_PASSWORD_OTP: "login/updatePasswordAfterVerification",
    SUB_AREA: "login/getAreaCoordinates",
  },

  RETAILER_SERVICE: {
    CREATE: "party/createRetailerKYCPartners",
    UPDATE: "sellers/update",
    UPDATE_RETAILER: "party/updatePartnerKyc",
    FETCH_RETAILERS: "party/v3/getPartyOnBasisOfArea",
    FETCH_DEALERS: "sellers/getAll",
    SUBMIT_PAYMENT: "payments/makePayment",
    FETCH_ORDERS: "order/v3/v3getOrder",
    DELETE_ORDER_LINE: "order/deleteOrderLine",
    EDIT_ORDER_LINE: "order/editOrderLine",
    ADD_ORDER_LINE: "order/addOrderLine",
    UPDATE_LOCATION: "party/updateLocationParty",
    FETCH_COMPETITORS: "competitor/getCompetitor",
    SEARCH_BY_LOCATION: "sellers/searchByLocation",
    FETCH_DEALER_ORDERS: "order/partyOrder",
    FETCH_DEALER_INVOICE: "invoices/getAll",
    FETCH_DEALER_OUTSTANDING: "outstandings/getAll",
    FETCH_DEALER_PAYMENTS: "payments/getAll",
    INVOICE_DETAIL: "invoice-line-items/getAll?offset=0&limit=1000",
    DEALER_ORDER_DETAILS: "dealer-order-line-items/getAll",
    GET_COMPLAINT_TYPE: "complaints/getComplaintType",
    GET_COMPLAINTS: "complaints/getComplaint",
    FETCH_CREDIT_LIMIT: "division/getCreditLimit",
    CREATE_COMPETITOR: "competitor/createCompetitor",
    CREATE_COMPETITOR: "competitor/updateCompetitor",
    GET_DSR: "dsr/getDSR",
    GET_DSR_AREA_L4: "dsr/getLevel4Area",
    CREATE_DSR: "dsr/createtDSR",
    ADD_DSR_AREA: "dsr/addAreaDSR",
    GET_DSR_AREA: "dsr/getDSRArea",
    GET_CUSTOMER_INFO: "profile/getCustomerBasicInfo",
    GET_CUSTOMER_VISIT: "visit/getCustomerVisit",
    GET_CUSTOMER_INVOICE: "invoice/v2/v2getCustomerInvoice",
    GET_CUSTOMER_COMPLAINT: "complaint/getComplaints",

    CREATE_COMPLAINT: "complaint/createComplaint",
    GET_NATURE_CODE: "complaint/getComplaintNatureCode",

    GET_CUSTOMER_INVOICE_LINES: "invoice/getCustomerInvoiceLines",
    GET_LOCATION: "party/getPlant",

    CREATE_ADDRESS: "contact/updateTicket",

    GET_ADDRESS: "party/getCustomerAddress",
    CREATE_CONTACT: "contact/createAndUpdateContactTicket",
    GET_CONTACT: "contact/getContact",
    GET_PINCODE_INFO: "party/GetSalesTerritoryOnBasisOfPincode",
    GET_AREA_INFO: "party/getAreaOnBasisOfPincode",
    CAPTURE_LOCATION: "party/updatePartyLocation",
    GET_PAYMENT_TERMS: "payment/getPay",
    CREATE_PAYMENT_TERMS: "payment/createPayment",
    UPDATE_PAYMENT_TERMS: "payment/updatePayment",
    ACCOUNT_STATUS: "party/activeOrDeactiveStatus",
    PFF_AUTOMATION: "party/updatestatus",
    HOLD_ACTIVE: "party/updateCustomerStatus",
    LANGUAGE: "language/getAllLanguages",
  },

  ORDERS_SERVICE: {
    DETAIL: "order-line/getAll",
    FETCH_ORDERS: "order/v3/v3getOrder",
    DEALER_ORDER_DETAIL: "order-line/getAll",
    REPEAT_ORDER: "/orders/repeatOrder",
    GET_TRANSPORT: "order/getTransportDetails",
    CREATE_PRIMARY: "order/createPrimaryOrder",
    VARIABLE_DISCOUNT: "order/getPrimaryvariablediscount",
    ORDER_LOCATION: "order/getOrderLocation",
    ORDER_LINE: "order/getPrimaryOrderUsingGuid",
    SECONDARY_ORDER: "order/v3/v3getSecondaryOrder",
    CREATE_SECONDARY: "order/createSecondaryOrder",
    REGULAR_ORDERS: "product/getRegularProducts",
    GET_PARTY: "party/v3/getPartyForOrder",
    GOOD_RETURN: "product/getGoodsReturn",
    CREATE_PRIMARY_GOOD: "product/createGoodsReturn",
  },

  VISITS_SERVICE: {
    GET_VISITS: "visit/allvisit",
    PLAN_VISIT: "visit/createvisit",
    CANCEL_VISIT: "visit/cancelVisit",
    EDIT_VISIT: "visit/updatevisit",
    PLACE_ORDER: "order/placeOrder",
    ADD_VISIT_INFO: "visitInfo/addRemark",
    START_VISIT: "visit/startvisit",
    END_VISIT: "visit/endvisit",
    FETCH_VISIT_INFO: "visit/getVisitInfo",
    FETCH_VISIT_IMAGE: "visitInfo/getAttachment",
    SUBMIT_COMPETITOR: "visitInfo/addCompetitor",
    SUBMIT_STOCK: "visitInfo/addStock",
    GET_COMPETITOR: "visitInfo/getVisitInfo",
    GET_STOCK: "visitInfo/getStock",
    UPDATE_STOCK: "visitInfo/editStock",
    UPDATE_COMPETITOR: "visitInfo/editCompetitor",
    GET_PARENT_AREAS: "area/getParentAreas",
    VISIT_INFO: "visit/createVisitInfo",
    VISIT_SUMMARY: "visit/getVisitsummaryforDashboards",
    VISIT_HISTORY: "visit/getvisitHistory",
    UPDATE_VISIT_INFO: "visit/updateVisitInfo",
  },

  PRODUCT_SERVICE: {
    GET_PRODUCTS: "product/v3/ProPrice",
    GET_PRODUCT_BRAND: "branding/getBrand",
    GET_PRODUCT_CLASS: "branding/getItemClass",
    GET_CATEGORIES: "product/getFilters/categories",
    GET_PRODUCT_GSM: "product/getGSM",
    GET_PRODUCT_ITEM: "product/getItem",
    GET_PRODUCT_ITEM_PRICE: "product/ProPrice",
    GET_SUBSUBCATEGORIES: "/productCategories/getAllSubSubCategory",
    GET_SCHEMES: "/scheme/getSchemeMaster",
  },

  EVENT_SERVICE: {
    // CREATE: 'event/add',
    // UPDATE: 'event/edit',
    FETCH_EVENTS: "event/getEvents",
    // FETCH_PARTICIPANTS: 'eventParticipant/getAll',
    // ADD_PARTICIPANTS: 'eventParticipant/add'
  },

  DASHBOARD_SERVICE: {
    ORDER_VALUE: "/dashboard/getOrderValue",
    COUNTERS: "/dashboard/getCounters",
    SITE_COUNT: "/dashboard/getSiteCount",
    VISIT_COUNT: "/dashboard/getVisitCount",
    EVENTS_COUNT: "/dashboard/getEventCount",
    DASHBOARD_DETAILS: "dashboard/v2/getDashboard",
    BRANDING: "branding/v2/getBrandingandTicker",
    TICKER: "branding/getTicker",
    PRIMARY_ORDER_SUMMARY: "order/getPrimaryOrderSummary",
    SECONDARY_ORDER_SUMAARY: "order/getSecondaryOrderSummary",
    GET_BRAND: "branding/getBrand",
    GET_CLASS: "branding/getItemClass",
    GET_SUB_AREA: "login/getAreaCoordinates",
    FILTER: "order/getOrderBasisOfFilter",
    DSR_DASHBOARD: "dashboard/getMyDetailsForSFA",
  },
  DISTRIBUTOR_SERVICE: {
    CREATE: "party/createDistributorKYC",
    UPDATE: "party/updateDistributorKYC",
    GET_DISTRIBUTOR: "party/getDistributorKYC",
    GET_ALL_AREA: "party/v2/getAllSalesTerritory",
    APPROVAL: "party/sendDistributorKYCforApproval",
    GET_SUBCATEGORY: "branding/getItemSubcategory",
  },
  COMPETITOR_SERVICE: {
    CREATE: "party/createCompetitorSchemeInfo",
    COMPETITOR_NAME: "party/getCompetitorMaster",
    GET_COMPETITOR: "party/getCompetitorScheme",
    GET_ITEMCLASS: "branding/getItemClass",
  },

  INFLUENCERS_SERVICE: {
    FETCH_INFLUENCERS: "influencers/getAll",
    CREATE: "contact/createProjectContact",
    UPDATE: "influencers/edit",
    FETCH_INFLUENCER_DETAIL: "influencers/detail",
    FETCH_INFLUENCER_SITES: "sites/getAll",
  },

  SITES_SERVICE: {
    CREATE: "sites/add",
    UPDATE: "sites/edit",
    CREATE_SITE_PRODUCT: "siteProducts/add",
    UPDATE_SITE_PRODUCT: "siteProducts/edit",
    FETCH_SITES: "sites/getAll",
    FETCH_SITE_PRODUCTS: "siteProducts/getAll",
  },

  EXPENSE_SERVICE: {
    FETCH_LOCAL_ITEM: "expense-item/getAllLocalExpenseItem",
    FETCH_OUTSTATION_ITEM: "expense-item/getAllOutstationExpenseItem",
    MOVE_LOCAL_TO_OUTSTATION: "expense-item/moveToOutstationExpense",
    MOVE_OUTSTATION_TO_LOCAL: "expense-item/moveToLocalExpense",
  },

  LOCAL_EXPENSE_SERVICE: {
    FETCH_EXPENSES: "expenses/getAll",
    FETCH_EXPENSE_ITEM: "expense-item/getAll",
    UPDATE_EXPENSES: "expense-item/updateExpense",
    SEND_APPROVAL: "expenses/sendingForApproval",
    APPROVE_REJECT_EXPENSE: "expenses/approveRejectExpence",
    ADD_REMARK: "expense-item/addRemark",
    FETCH_LOCAL_IMAGE: "files/getExpenseItemFiles",
    UPLOAD_LOCAL_IMAGE: "files/addAttachment",
  },

  TOUR_SERVICE: {
    FETCH_CITIES: "cities/getAll",
    CREATE_TOUR: "tours/create",
    UPDATE_TOUR: "tours/updateTour",
    SEND_APPROVAL: "tours/sendingForApproval",
    FETCH_TOUR: "tours/getAll",
    APPROVE_REJECT_TOUR: "tours/approveRejectTour",
  },

  OUTSTATION_EXPENSE_SERVICE: {
    FETCH_EXPENSES: "expenses/getAll",
    FETCH_EXPENSE_ITEM: "expense-item/getAll",
    UPDATE_EXPENSES: "expense-item/addExpenseItem",
    UPDATE_EXPENSE_ITEM: "expense-item/updateExpenseItem",
    UPDATE_LOCAL_EXPENSE: "expense-item/updateExpense",
    SEND_APPROVAL: "expenses/sendingForApproval",
    APPROVE_REJECT_EXPENSE: "expenses/approveRejectExpence",
    ADD_REMARK: "expense-item/addRemark",
    APPROVED_TOUR: "expense-item/expenseItemByTour",
    VISITS_BY_TOUR: "visits/visitbytours",
    ADD_EXPENSES: "expenses/add",
    SUBMIT_EXPENSE_ITEM: "expense-item/addExpenseItemNew",
    UPDATE_EXPENSE_STATUS: "expense-item/moveToLocalExpense",
    UPDATE_EMAIL_STATUS: "expenses/updateEmailStatus",
    ADD_EXPENSE_ITEM: "expense-item/addExpenseItem",
    FETCH_EXPENSE_IMAGE: "files/getExpenseItemFiles",
  },

  COMMON_SERVICE: {
    AREA_PJP: "visitInfo/getPjp",
    GET_OBJECTIVE: "visit/getObjective",
    GET_STATE: "state/getState",
    GET_CITY: "city/getCity",
    GET_ALL_CITY: "city/getAll",
    UPLOAD_IMAGE: "image/multiupload",
    GET_BEAT: "beat/getBeat",
    GET_RETAILER_AREA: "area/getAreaRetailer",
    GET_DEALER_TYPE: "party/getDealerType",
    DIST_CHANNEL: "distChannel/getAll",
    GET_ALL_PLANT: "plant/getAll",
    GET_ALL_INCOTERM: "incoterm/getAll",
    GET_ALL_ROUTE: "route/getAll",
    GET_ALL_INSURANCE: "insurancetype/getAll",
    GET_BILL_PARTY: "party/billToParty",
    NOTIFICATIONS: "notification/getNotification",
    SINGLE_IMAGE: "image/singleupload",
  },

  PROJECT_SERVICE: {
    CREATE: "project/createProject",
    GET_PROJECT: "project/v2/getProject",
    BATHROOM_MASTER: "product/getBathroomCostMaster",
    UPDATE_PROJECT: "project/updateProject",
    CATALOGUE: "product/getProductCatalogue",
    GET_PROJECT_OPP: "project/getAllopportunityforProject",
    PRODUCT_SOLD: "project/getProductforProject",
    PRODUCT_OFFER: "project/getProductsOfferedforProject",
    CREATE_PRODUCT: "project/createProductsOfferedforProject",
    PROJECT_PRODUCT_SOLD: "project/getProductsSoldforProject",
  },
  LEAD_SERVICE: {
    CREATE: "project/createOpportunity",
    GET_OPPORTUNITY: "project/v2/getOpportunity",
    UPDATE_OPPORTUNITY: "project/updateOpportunity",
  },
};
